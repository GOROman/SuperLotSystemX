// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum NotificationStatus {
  PENDING
  SENT
  FAILED
}

enum WinnerStatus {
  PENDING
  SENT
  FAILED
}

// ユーザー情報
model User {
  id          String    @id @default(uuid())
  twitterId   String    @unique // Twitter ID
  screenName  String    // Twitter スクリーンネーム
  isFollower  Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  entries     Entry[]   // 応募情報
  winners     Winner[]  // 当選情報
}

// 応募情報
model Entry {
  id            String    @id @default(uuid())
  userId        String
  user          User      @relation(fields: [userId], references: [id])
  retweetId     String    // リツイートID
  retweetedAt   DateTime  // リツイート日時
  createdAt     DateTime  @default(now())
  isValid       Boolean   @default(true)
  invalidReason String?   // 無効理由
  winners       Winner[]  // 当選情報

  @@index([userId, isValid])
}

// ギフトコード
model GiftCode {
  id        String    @id @default(uuid())
  code      String    @unique
  amount    Int
  isUsed    Boolean   @default(false)
  usedAt    DateTime?
  note      String?
  createdAt DateTime  @default(now())
  winner    Winner?
}

// 当選情報
model Winner {
  id          String    @id @default(uuid())
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  entryId     String
  entry       Entry     @relation(fields: [entryId], references: [id])
  giftCodeId  String    @unique
  giftCode    GiftCode  @relation(fields: [giftCodeId], references: [id])
  status      WinnerStatus @default(PENDING)
  createdAt   DateTime  @default(now())
  notifications Notification[]
}

// 通知情報
model Notification {
  id          String    @id @default(uuid())
  winnerId    String
  winner      Winner    @relation(fields: [winnerId], references: [id])
  status      NotificationStatus @default(PENDING)
  dmMessageId String?
  dmSentAt    DateTime?
  error       String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([status])
}
